#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{microtype}
\usetheme{Frankfurt}
\usepackage{tikz}
\usepackage{bm}
\usepackage{animate}
\usepackage[absolute,overlay]{textpos}
\usetikzlibrary{automata,positioning,arrows.meta}
\setbeamertemplate{navigation symbols}{}
\useoutertheme{split}
\usepackage{ae,aecompl}
\usepackage{algorithmic}
\deftranslation[to=italian]{Definition}{Definizione}
\deftranslation[to=italian]{Examples}{Esempi}
\deftranslation[to=italian]{Example}{Esempio}
\deftranslation[to=italian]{Theorem}{Teorema}
\deftranslation[to=italian]{Corollary}{Corollario}
\definecolor{blue1}{RGB}{51,51,179}
\definecolor{blue2}{RGB}{0,0,204}
\definecolor{blue3}{RGB}{0,0,153}
\setbeamercolor{author in head/foot}{fg=white, bg=blue3}
\setbeamercolor{title in head/foot}{fg=white, bg=blue2}
\setbeamercolor{date in head/foot}{fg=white, bg=blue1}
\setbeamertemplate{navigation symbols}{}
\setbeamertemplate{footline}
{
  \leavevmode%
  \hbox{%
  \begin{beamercolorbox}[wd=.333333\paperwidth,ht=2.25ex,dp=1ex,center]{author in head/foot}%
    \usebeamerfont{author in head/foot}\insertshortauthor~~\beamer@ifempty{\insertshortinstitute}{}{(\insertshortinstitute)}
  \end{beamercolorbox}%
  \begin{beamercolorbox}[wd=.333333\paperwidth,ht=2.25ex,dp=1ex,center]{title in head/foot}%
    \usebeamerfont{title in head/foot}\insertshorttitle
  \end{beamercolorbox}%
  \begin{beamercolorbox}[wd=.333333\paperwidth,ht=2.25ex,dp=1ex,right]{date in head/foot}%
    \usebeamerfont{date in head/foot}\insertshortdate{}\hspace*{2em}
    \insertframenumber{} / \inserttotalframenumber\hspace*{2ex} 
  \end{beamercolorbox}}%
  \vskip0pt%
}
\setbeamersize{text margin left=1cm,text margin right=1cm} 
\end_preamble
\options handout
\use_default_options false
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 0.75in
\topmargin 0.6in
\rightmargin 0.75in
\bottommargin 0.6in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title (Plain Frame)
Chordal graphs: a linear testing algorithm
\end_layout

\begin_layout Author
Gabriele Vanoni
\end_layout

\begin_layout Institute
Politecnico di Milano
\end_layout

\begin_layout Date
23 May 2017
\end_layout

\begin_layout Section
The algorithm
\end_layout

\begin_layout PlainFrame

\end_layout

\begin_deeper
\begin_layout Standard
\align center

\series bold
\size largest
The algorithm
\end_layout

\end_deeper
\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Preliminary definitions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset VSpace -0.1cm
\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Undirected graph
\end_layout

\end_inset

A 
\shape italic
graph
\shape default
 
\begin_inset Formula $G$
\end_inset

 is a pair 
\begin_inset Formula $(V,E)$
\end_inset

 where 
\begin_inset Formula $V$
\end_inset

 is a finite set and 
\begin_inset Formula $E$
\end_inset

 is a set of 
\begin_inset Formula $2-$
\end_inset

subsets of 
\begin_inset Formula $V$
\end_inset

.
 Elements of 
\begin_inset Formula $V$
\end_inset

 are called 
\shape italic
vertices
\shape default
 while elements of 
\begin_inset Formula $E$
\end_inset

 are called 
\shape italic
edges
\shape default
.
 
\begin_inset Formula $\left|V\right|=n$
\end_inset

, 
\begin_inset Formula $\left|E\right|=m$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definitions
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Path, Cycle, Chord
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A 
\shape italic
path
\shape default
 
\begin_inset Formula $\pi$
\end_inset

 is a sequence of distinct vertices 
\begin_inset Formula $v_{1},v_{2},\cdots v_{i},\cdots,v_{k}$
\end_inset

 where 
\begin_inset Formula $\{v_{i},v_{i+1}\}\in E$
\end_inset

 with 
\begin_inset Formula $1\leq i<k$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A 
\shape italic
cycle
\shape default
 of lenght 
\begin_inset Formula $k+1$
\end_inset

 is a closed path, i.e.
 a path for which 
\begin_inset Formula $\{v_{1},v_{k}\}\in E$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A 
\shape italic
chord
\shape default
 is an edge connecting two nonconsecutive vertices of a cycle.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Chordal graph
\end_layout

\end_inset

A graph is chordal if every cycle of lenght at least four has a chord.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Orderings and fill-ins
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Definition
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Ordering
\end_layout

\end_inset

An 
\shape italic
ordering
\shape default
 is a bijection 
\begin_inset Formula $\alpha:V\rightarrow\{1,2,\cdots,n\}$
\end_inset

.
 
\begin_inset Formula $v<_{\alpha}w$
\end_inset

 iff 
\begin_inset Formula $V(v)<V(w)$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Fill-in
\end_layout

\end_inset

A 
\shape italic
fill-in
\shape default
 induced by an ordering 
\begin_inset Formula $\alpha$
\end_inset

 is a set of edges 
\begin_inset Formula $F(\alpha)\not\in E$
\end_inset

 such that there exists a path containing only 
\begin_inset Formula $u,v$
\end_inset

 and vertices ordered after both 
\begin_inset Formula $u$
\end_inset

 and 
\begin_inset Formula $v$
\end_inset

.
 
\begin_inset Formula $F(\alpha)$
\end_inset

 is 
\shape italic
zero fill-in
\shape default
 if 
\begin_inset Formula $F(\alpha)=\varnothing$
\end_inset

 and 
\begin_inset Formula $\alpha$
\end_inset

 is a zero fill-in ordering.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Definition

\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Elimination graph
\end_layout

\end_inset

The 
\shape italic
elimination graph
\shape default
 of 
\begin_inset Formula $G$
\end_inset

 w.r.t.
 the ordering 
\begin_inset Formula $\alpha$
\end_inset

 is 
\begin_inset Formula $G(\alpha)=(V,E\cup F(\alpha))$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{columns}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{column}{5cm}
\end_layout

\begin_layout Plain Layout

			
\backslash
centering
\end_layout

\begin_layout Plain Layout

			
\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (0,1) node[draw, circle] (a) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (1,0) node[draw, circle] (b) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (1,2) node[draw, circle] (c) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (2.5,0) node[draw, circle] (d) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (2.5,2) node[draw, circle] (e) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (3.5,1) node[draw, circle] (f) {};
\end_layout

\begin_layout Plain Layout

			
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (c) -- (a) -- (b);
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (d) -- (f) -- (e);
\end_layout

\begin_layout Plain Layout

				
\backslash
draw[blue, line width = 0.3mm] (b) -- (c) -- (e) -- (d) -- (b);
\end_layout

\begin_layout Plain Layout

			
\backslash
end{tikzpicture}
\backslash
newline
\end_layout

\begin_layout Plain Layout

			not chordal 
\backslash
vspace{0.7cm}
\end_layout

\begin_layout Plain Layout

			
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

			
\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (0,1) node[draw, circle] (a) {1};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (1,0) node[draw, circle] (b) {2};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (1,2) node[draw, circle] (c) {3};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (2.5,0) node[draw, circle] (d) {4};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (2.5,2) node[draw, circle] (e) {5};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (3.5,1) node[draw, circle] (f) {6};
\end_layout

\begin_layout Plain Layout

			
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (a) -- (b) -- (d) -- (f) -- (e) -- (c) -- (a);
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (b) -- (c);
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (d) -- (e);
\end_layout

\begin_layout Plain Layout

			
\backslash
end{tikzpicture}
\backslash
newline
\end_layout

\begin_layout Plain Layout

			ordered
\end_layout

\begin_layout Plain Layout

		
\backslash
end{column}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{column}{5cm}
\end_layout

\begin_layout Plain Layout

			
\backslash
centering
\end_layout

\begin_layout Plain Layout

			
\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (0,1) node[draw, circle] (a) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (1,0) node[draw, circle] (b) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (1,2) node[draw, circle] (c) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (2.5,0) node[draw, circle] (d) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (2.5,2) node[draw, circle] (e) {};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (3.5,1) node[draw, circle] (f) {};
\end_layout

\begin_layout Plain Layout

			
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (a) -- (b) -- (d) -- (f) -- (e) -- (c) -- (a);
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (b) -- (c) -- (d) -- (e);
\end_layout

\begin_layout Plain Layout

			
\backslash
end{tikzpicture}
\backslash
newline
\end_layout

\begin_layout Plain Layout

			chordal
\backslash
vspace{0.7cm}
\end_layout

\begin_layout Plain Layout

				
\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (0,1) node[draw, circle] (a) {1};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (1,0) node[draw, circle] (b) {2};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (1,2) node[draw, circle] (c) {3};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (2.5,0) node[draw, circle] (d) {4};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (2.5,2) node[draw, circle] (e) {5};
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (3.5,1) node[draw, circle] (f) {6};
\end_layout

\begin_layout Plain Layout

			
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (a) -- (b) -- (d) -- (f) -- (e) -- (c) -- (a);
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (b) -- (c);
\end_layout

\begin_layout Plain Layout

				
\backslash
draw (d) -- (e);
\end_layout

\begin_layout Plain Layout

				
\backslash
draw[red, line width = 0.3mm] (c) -- (d);
\end_layout

\begin_layout Plain Layout

			
\backslash
end{tikzpicture}
\backslash
newline
\end_layout

\begin_layout Plain Layout

			elimination graph
\end_layout

\begin_layout Plain Layout

		
\backslash
end{column}
\end_layout

\begin_layout Plain Layout

	
\backslash
end{columns}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Testing chordality
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Theorem
A graph is chordal if and only if it has a zero fill-in ordering.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We want to compute an ordering 
\begin_inset Formula $\alpha$
\end_inset

 that is zero fill-in if and only if 
\begin_inset Formula $G$
\end_inset

 is chordal.
 In this way we can compute 
\begin_inset Formula $F(\alpha)$
\end_inset

.
 
\begin_inset Formula $G$
\end_inset

 is chordal if and only if 
\begin_inset Formula $F(\alpha)=\varnothing$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Maximum cardinality search (MCS)
\end_layout

\end_inset

It's an ordering algorithm in which at each step 
\begin_inset Formula $i$
\end_inset

 (from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $n$
\end_inset

) the vertex selected and numberd with 
\begin_inset Formula $i$
\end_inset

 among the unnumbered ones is that adjacent to the largest number of previously
 numberd vertices, breaking ties arbitrarily.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Theorem
An ordering generated by MCS is zero fill-in if the graph is chordal.
\end_layout

\begin_layout Theorem

\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Testing chordality - complexity analysis
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{textblock}{50}(7.7,2.1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1]
\end_layout

\begin_layout Plain Layout


\backslash
FOR{$i=0$ 
\backslash
TO $n-1$ } {
\end_layout

\begin_layout Plain Layout

	
\backslash
STATE $set[i]:=
\backslash
varnothing$ }
\end_layout

\begin_layout Plain Layout


\backslash
ENDFOR
\end_layout

\begin_layout Plain Layout


\backslash
FORALL{ $v$ in $V$} {
\end_layout

\begin_layout Plain Layout

	
\backslash
STATE $size[v]:=0;
\backslash
,set[0]:=set[0]
\backslash
cup
\backslash
{v
\backslash
}$ }
\end_layout

\begin_layout Plain Layout


\backslash
ENDFOR
\end_layout

\begin_layout Plain Layout


\backslash
STATE $j:=0$
\end_layout

\begin_layout Plain Layout


\backslash
FOR {$i=1$ 
\backslash
TO $n$ } {
\end_layout

\begin_layout Plain Layout

	
\backslash
STATE $v:=$ delete any node from $set[j]$
\end_layout

\begin_layout Plain Layout

	
\backslash
STATE $
\backslash
alpha [v]:=i;
\backslash
,
\backslash
alpha^{-1} [i]:=v;
\backslash
,size[v]:=-1$
\end_layout

\begin_layout Plain Layout

	
\backslash
FORALL {$(u,v)
\backslash
in E$ and $size[u]
\backslash
geq 0$} {
\end_layout

\begin_layout Plain Layout

		
\backslash
STATE delete $u$ from $set[size[u]]$
\end_layout

\begin_layout Plain Layout

		
\backslash
STATE $size[u]:=size[u]+1$
\end_layout

\begin_layout Plain Layout

		
\backslash
STATE $set[size[u]]:=set[size[u]]
\backslash
cup 
\backslash
{u
\backslash
}$ }
\end_layout

\begin_layout Plain Layout

	
\backslash
ENDFOR }
\end_layout

\begin_layout Plain Layout

	
\backslash
STATE $j:=j+1$
\end_layout

\begin_layout Plain Layout

	
\backslash
WHILE {$j
\backslash
geq 0$ and $set[j]=
\backslash
varnothing$} {
\end_layout

\begin_layout Plain Layout

		
\backslash
STATE $j:=j-1$ }
\end_layout

\begin_layout Plain Layout

	
\backslash
ENDWHILE
\end_layout

\begin_layout Plain Layout


\backslash
ENDFOR
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{textblock}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{textblock}{6}(1,2.1)
\end_layout

\end_inset


\end_layout

\begin_layout Theorem
Complexity of the algorithm that computes the MCS ordering is 
\begin_inset Formula $\mathcal{O}(n+m)$
\end_inset

.
\end_layout

\begin_layout Proof
The first two for loops are 
\begin_inset Formula $\mathcal{O}(n)$
\end_inset

.
 The third is also 
\begin_inset Formula $\mathcal{O}(n)$
\end_inset

 but there are inner loops.
 However in the first one every edge is scanned at most twice, while the
 second one is executed at most 
\begin_inset Formula $n$
\end_inset

 times yielding a total cost of the outer loop of 
\begin_inset Formula $\mathcal{O}(n+m)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{textblock}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computing the fill-in
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Definition
The 
\shape italic
follower
\shape default
 of a vertex 
\begin_inset Formula $v$
\end_inset

, 
\begin_inset Formula $f(v)$
\end_inset

 is the vertex 
\begin_inset Formula $w$
\end_inset

 of largest number (w.r.t to 
\begin_inset Formula $\alpha$
\end_inset

) both adjacent to 
\begin_inset Formula $v$
\end_inset

 in 
\begin_inset Formula $G(\alpha)$
\end_inset

 and such that 
\begin_inset Formula $w<_{\alpha}v$
\end_inset

.
 For 
\begin_inset Formula $i\geq0$
\end_inset

, 
\begin_inset Formula $f^{0}(v)=v$
\end_inset

 and 
\begin_inset Formula $f^{i+1}(v)=f(f^{i}(v))$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Theorem
If 
\begin_inset Formula $x,w\in V$
\end_inset

 with 
\begin_inset Formula $w<_{\alpha}x$
\end_inset

, then 
\begin_inset Formula $(x,w)\in E\cup F(\alpha)$
\end_inset

 if and only if there is a vertex 
\begin_inset Formula $v$
\end_inset

 such that 
\begin_inset Formula $(v,w)\in E$
\end_inset

 and 
\begin_inset Formula $f^{i}(v)=x$
\end_inset

 for some 
\begin_inset Formula $i\geq0$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Standard
With this theorem we can compute for any vertex 
\begin_inset Formula $w$
\end_inset

, the set 
\begin_inset Formula $A(w)=\{x|(x,w)\in E\cup F(\alpha),$
\end_inset


\begin_inset Formula $w<_{\alpha}x\}$
\end_inset

 and also all vertices 
\begin_inset Formula $x$
\end_inset

 such that 
\begin_inset Formula $f(x)=w$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computing the fill-in - complexity analysis
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{textblock}{50}(7.5,3.2)
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1]
\end_layout

\begin_layout Plain Layout


\backslash
FOR{$i=n$ 
\backslash
TO $1$ } {
\end_layout

\begin_layout Plain Layout

	
\backslash
STATE $w:=
\backslash
alpha^{-1}[i]$
\end_layout

\begin_layout Plain Layout

	
\backslash
STATE $f[w]:=w$
\end_layout

\begin_layout Plain Layout

	
\backslash
STATE $index[w]:=i$
\end_layout

\begin_layout Plain Layout

	
\backslash
FORALL {$v
\backslash
in V$ s.t.
 $(v,w)
\backslash
in E$ and $
\backslash
alpha [v]>i$} {
\end_layout

\begin_layout Plain Layout

		
\backslash
STATE $x:=v$
\end_layout

\begin_layout Plain Layout

		
\backslash
WHILE {$index[x]>i$} {
\end_layout

\begin_layout Plain Layout

			
\backslash
STATE $index[x]:=i$
\end_layout

\begin_layout Plain Layout

			
\backslash
STATE add $(x,w)$ to $E
\backslash
cup F(
\backslash
alpha)$
\end_layout

\begin_layout Plain Layout

			
\backslash
STATE $x:=f[x]$
\end_layout

\begin_layout Plain Layout

		}
\backslash
ENDWHILE
\end_layout

\begin_layout Plain Layout

		
\backslash
IF {$f[x]=x$} {
\end_layout

\begin_layout Plain Layout

			
\backslash
STATE $f[x]:=w$ }
\end_layout

\begin_layout Plain Layout

		
\backslash
ENDIF }
\end_layout

\begin_layout Plain Layout

	
\backslash
ENDFOR }
\end_layout

\begin_layout Plain Layout


\backslash
ENDFOR
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{textblock}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{textblock}{6}(1,2.8)
\end_layout

\end_inset


\end_layout

\begin_layout Theorem
Complexity of the algorithm that computes the fill-in of a graph 
\begin_inset Formula $G$
\end_inset

 is 
\begin_inset Formula $\mathcal{O}(n+m')$
\end_inset

 where 
\begin_inset Formula $m'=|E\cup F(\alpha)|$
\end_inset

.
\end_layout

\begin_layout Proof
The outer loop is executed 
\begin_inset Formula $n$
\end_inset

 times.
 The inner one is scans each vertex of the elimination graph at most twice
 yielding a total cost of the outer loop of 
\begin_inset Formula $\mathcal{O}(n+m')$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{textblock}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Implementation
\end_layout

\begin_layout PlainFrame

\end_layout

\begin_deeper
\begin_layout Standard
\align center

\series bold
\size largest
Implementation
\end_layout

\end_deeper
\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Language and libraries
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
JavaSE 8 was used to implement the algorithm.
\end_layout

\begin_layout Itemize
Graph data structures were provided by JUNG library and graphs were stored
 in PajekNet format.
\end_layout

\begin_layout Itemize
Apache Maven was used to handle the project.
\end_layout

\begin_layout Itemize
Eclipse was used as IDE.
\end_layout

\begin_layout Itemize
The code is released under GPL 3 license.
\end_layout

\begin_layout Itemize
Oracle Java Mission Control with Flight Recorder was used to profile the
 application.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Data structures
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Two data structures were defined to implement the algorithms.
\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Vertex
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
alpha:int
\end_layout

\begin_layout Itemize

\family typewriter
size:int
\end_layout

\begin_layout Itemize

\family typewriter
index:int
\end_layout

\begin_layout Itemize

\family typewriter
follower:Vertex
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
ChordalAlgorithms
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
order:List<Vertex>
\end_layout

\begin_layout Itemize

\family typewriter
graph:UndirectedGraph<Vertex,Integer>
\end_layout

\begin_layout Itemize

\family typewriter
maximumCardinalitySearch():void
\end_layout

\begin_layout Itemize

\family typewriter
isChordal():boolean
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Testing environment
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Block

\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
JVM
\series default
: Oracle 1.8.0_111-b14
\end_layout

\begin_layout Itemize

\series bold
OS
\series default
: Ubuntu 15.10
\end_layout

\begin_layout Itemize

\series bold
Linux kernel
\series default
: 4.2.0-42-generic
\end_layout

\begin_layout Itemize

\series bold
libc
\series default
: glibc 2.21
\end_layout

\begin_layout Itemize

\series bold
System architecture
\series default
: x86_64
\end_layout

\begin_layout Itemize

\series bold
CPU
\series default
: Intel Core i7-2600K CPU @ 3.40GHz
\end_layout

\begin_layout Itemize
\noindent

\series bold
Memory
\series default
: 8 GB
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Datasets
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
I chose to use real networks data to test the algorithms.
\end_layout

\begin_layout Itemize
All graphs from datasets were obviously non chordal.
\end_layout

\begin_layout Itemize
For every datasets, I computed the elimination graph, so to have a chordal
 graph and I exported it.
\end_layout

\begin_layout Itemize
To measure performances I used only chordal graphs so that the complexity
 is 
\begin_inset Formula $\mathcal{O}(n+m)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Profiling
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Total time
\series default
 is the actual time spent by the application to execute the two methods
 of the algorithm, 
\family typewriter
maximumCardinalitySearch()
\family default
 and 
\family typewriter
isChordal()
\family default
.
 The data structure 
\family typewriter
ChordalAlgorithms
\family default
 was already filled in with the graph read from file.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Dataset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
n+m
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Total time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YeastChordal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
126547
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
345 ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PGPChordal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
192058
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
586 ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DaysAllChordal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3633865
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18s 166 ms
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/plot.eps
	lyxscale 10
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Parallel versions
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout PlainFrame

\end_layout

\begin_deeper
\begin_layout Standard
\align center

\series bold
\size largest
Parallel versions
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Parallel versions of the algorithm
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Recognizing is in the complexity class 
\series bold
NC
\series default
, as shown for the first time by Edenbrandt (1986), using a different characteri
zation of chordal graphs.
 After this seminal paper other results were achieved in optimizing the
 algorithm.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="2.5cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="top" width="3cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Authors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Complexity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of processors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cost model
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Edenbrandt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}(\log n)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}(n^{5})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PRAM CREW
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Chandrasekharan et al.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}(\log n)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}(n^{4})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PRAM CRCW
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Klein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}(\log^{2}n)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}(n+m)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PRAM CRCW
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Klein
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}(\log^{2}n)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}(\frac{n+m}{\log n})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PRAM CRCW (randomized)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\end_body
\end_document
